@use "colors" as c;

.app-bounder {
	display: grid;
	grid-template-columns: 1fr;
	width: 100vw;
	max-width: calc(1200px + 2rem);
	box-sizing: border-box;
	place-items: center;
}

.app {
	display: grid;
	grid-template-columns: 1fr;
	gap: 1rem;
	padding: 1rem;
	width: 100vw;
	max-width: calc(1200px + 2rem);
	box-sizing: border-box;
	place-items: center;
	margin-bottom: 50vh;
}

@media only screen and (max-width: 1200px) {
	.app {
		grid-template-columns: 1fr;
		grid-template-areas:
			"topbar"
			"content";
	}
}

.selected {
	background-color: rgba(c.$lightblue, 0.5);
}

.card {
	background-color: rgba(c.$grey, 0.7);
	padding: 1rem;
	transition: all 250ms ease-in-out;
}

.card.hover:hover {
	background-color: c.$grey;
}

.card.clear {
	background-color:  rgba(c.$lightgrey, 0);
}

.card.clear.hover:hover {
	background-color:  rgba(c.$lightgrey, 0.7);
}

.card.light {
	background-color: rgba(c.$lightgrey, 0.7);
}

.card.light.hover:hover {
  background-color: c.$lightgrey;
}

.card.dark {
	background-color: rgba(c.$darkgrey, 0.7);
}

.card.dark.hover:hover {
  background-color: c.$darkgrey;
}

.card.hoverable:hover {
	background-color: rgba(c.$lightblue, 0.5);
}

.content {
	grid-template-columns: auto 1fr;
	background-color: c.$darkgrey;
}

.left-content {
	height: fit-content;
	width: fit-content;
	min-width: 325px;
	max-width: 450px;
}

@media only screen and (max-width: 900px) {
	.content {
		grid-template-columns: 1fr;
	}

	.left-content {
		width: auto;
	}
}

$anim-time: 500ms;

.content-enter {
	grid-area: content;
	// animation-name: content-enter;
	// animation-duration: $anim-time;
	// animation-timing-function: ease-out;
}

.content-exit {
	grid-area: content;
	animation-name: content-exit;
	animation-duration: $anim-time;
	animation-timing-function: ease-out;
}

@keyframes content-enter {
	from {
		opacity: 0;
		transform: translateX(100%);
	}

	to {
		opacity: 1;
		transform: translateX(0%);
	}
}

@keyframes content-exit {
	from {
		opacity: 0;
		transform: translateX(0%);
	}

	to {
		opacity: 1;
		transform: translateX(-100%);
	}
}

.action {
	background-color: c.$lightgrey;
	align-items: center;
	justify-content: space-between;
	padding: 0.5rem;
	box-sizing: border-box;
}

.updates-container {
	max-height: calc(225px + 5.5rem);
}

.updates-container-small {
	max-height: calc(135px + 5.5rem);
}

.show-updates-indicator {
	font-size: 0.8rem;
	position: absolute;
	bottom: 0.5rem;
	left: 50%;
	transform: translateX(-50%);
	opacity: .7;
}

.tabs {
	height: fit-content;
}

.config {
	height: 100%;
	place-items: start center;
	width: 100%;
	// grid-template-rows: 70vh auto;
}

.config-items {
	height: fit-content;
	// max-height: 65vh;
	width: 100%;
	max-width: 700px;
	padding: 0rem 0.5rem;
}

.config-item {
	width: 100%;
	flex-wrap: wrap;
	background-color: c.$lightgrey;
	box-sizing: border-box;
	padding: 0.5rem;
	height: fit-content;
	box-sizing: border-box;
}

@media only screen and (max-width: 700px) {
	.config-item {
		width: calc(100vw - 6rem);
	}
}

.running {
	color: c.$textgreen;
	// text-shadow: 0px 0px 1px c.$textgreen;
}

.exited {
	color: c.$textred;
	// text-shadow: 0px 0px 1px c.$textred;
}

.apexcharts-tooltip {
	background: #f3f3f3;
	color: black;
}